package me.coolmint.ngm.features.modules.exploit;

import it.unimi.dsi.fastutil.objects.Object2IntMap;
import me.coolmint.ngm.event.impl.TickEvent;
import me.coolmint.ngm.features.modules.Module;
import me.coolmint.ngm.features.settings.Setting;
import me.coolmint.ngm.util.player.EnchantmentUtil;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.enchantment.EnchantmentHelper;
import net.minecraft.enchantment.Enchantments;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.item.TridentItem;
import net.minecraft.network.packet.c2s.play.PlayerActionC2SPacket;
import net.minecraft.network.packet.c2s.play.UpdateSelectedSlotC2SPacket;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Direction;
import com.google.common.eventbus.Subscribe;

public final class Disabler extends Module {
    public Setting<Mode> mode = register(new Setting<>("Mode", Mode.GRIM));

    public Disabler() {
        super("Disabler", "", Module.Category.EXPLOIT, true, false, false);
    }

    @Subscribe
    public void onTick(TickEvent event) {
        if (mode.getValue() == Mode.GRIM) {

            if (mc.player.isUsingItem() && mc.player.getActiveItem().isFood()) {
                return;
            }

            int oldSlot = mc.player.getInventory().selectedSlot;
            int tridentSlot = -1;
            for (int i = 0; i < 9; ++i) {
                final ItemStack stack = mc.player.getInventory().getStack(i);
                if (!stack.isEmpty() && stack.getItem() instanceof TridentItem) {
                    final Object2IntMap<Enchantment> enchantments = EnchantmentUtil.getEnchantments(stack);
                    if (EnchantmentHelper.getRiptide(stack) >0) {
                        tridentSlot = i;
                        break;
                    }
                }
            }

            if (tridentSlot == -1) {
                return;
            }

            mc.player.networkHandler.sendPacket(new UpdateSelectedSlotC2SPacket(tridentSlot));
            mc.player.networkHandler.sendPacket(new PlayerActionC2SPacket(PlayerActionC2SPacket.Action.RELEASE_USE_ITEM, BlockPos.ORIGIN, Direction.DOWN));
            mc.player.networkHandler.sendPacket(new UpdateSelectedSlotC2SPacket(oldSlot));
        }
    }

    private enum Mode {
        GRIM
    }
}