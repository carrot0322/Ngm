package me.coolmint.ngm.features.modules.exploit;

import me.coolmint.ngm.Ngm;
import me.coolmint.ngm.features.modules.Module;
import me.coolmint.ngm.features.settings.Setting;
import me.coolmint.ngm.util.player.MovementUtil;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;

public class Regen extends Module {
    public Setting<Integer> health = register(new Setting<>("Health", 16, 0, 20));
    public Setting<Integer> speed = register(new Setting<>("Speed", 20, 1, 35));
    public Setting<Float> timer = register(new Setting<>("Timer", 1.0f, 0.1f, 10.0f));

    public Setting<Boolean> notInTheAir = register(new Setting<>("Not In The Air", true));
    public Setting<Boolean> notDuringMove = register(new Setting<>("Not During Move", false));
    public Setting<Boolean> notDuringRegeneration = register(new Setting<>("Not During Regeneration", false));
    public Setting<Boolean> doNotCauseHunger = register(new Setting<>("Do Not Cause Hunger", false));

    public Setting<MovePacketType> packetType = register(new Setting<>("Packet Type", MovePacketType.Full));

    enum MovePacketType {
        OnGround,
        PositionAndOnGround,
        LookAndOnGround,
        Full
    }

    public Regen() {
        super("Regen", "", Category.EXPLOIT, true, false, false);
    }

    @Override
    public void onUpdate(){
        if (mc.player.isInCreativeMode() || mc.player.isDead() || mc.player.getHealth() > health.getValue()){
            Ngm.TICK_TIMER = 1f;
            return;
        }

        if (notInTheAir.getValue() && !mc.player.isOnGround())
            return;

        if (notDuringMove.getValue() && MovementUtil.isMoving())
            return;

        if (notDuringRegeneration.getValue() && mc.player.hasStatusEffect(StatusEffects.REGENERATION))
            return;

        if (doNotCauseHunger.getValue() && mc.player.getHungerManager().getFoodLevel() < 20)
            return;

        Ngm.TICK_TIMER = timer.getValue();

        for (int i = 0; i < speed.getValue(); i++) {
            mc.player.networkHandler.sendPacket(
                    switch (packetType.getValue()){
                        case OnGround -> new PlayerMoveC2SPacket.OnGroundOnly(mc.player.isOnGround());
                        case PositionAndOnGround -> new PlayerMoveC2SPacket.PositionAndOnGround(mc.player.getX(), mc.player.getY(), mc.player.getZ(), mc.player.isOnGround());
                        case LookAndOnGround -> new PlayerMoveC2SPacket.LookAndOnGround(mc.player.getYaw(), mc.player.getPitch(), mc.player.isOnGround());
                        case Full -> new PlayerMoveC2SPacket.Full(mc.player.getX(), mc.player.getY(), mc.player.getZ(), mc.player.getYaw(), mc.player.getPitch(), mc.player.isOnGround());
                    }
            );
        }
    }
}
